@using System.Web.Optimization
<!-- helper method for selected tab-->
@helper SelectedTabClass(string tabName){
    if (tabName == ViewBag.SelectedTab)
    {
        // to print active 
        @: active
    }
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Admin </title>
    <!--<title> ViewBag.Title - Blog </title>-->

    <environment names="Development">
        <!-- Add linik to styles here-->
        @Styles.Render("~/admin/styles")
    </environment>
    <environment names="Staging,Production">

        @Styles.Render("~/admin/styles")
    </environment>
</head>
<body>
    <nav class="navbar navbar-default">
        <div class="container-fluid">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="@Url.RouteUrl("home")">Admin</a>
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
                    <li>@Html.RouteLink("Home", "home")</li>
                    <li class="@SelectedTabClass("posts")">@Html.ActionLink("Posts", "Index", "Posts", new { area = "admin" }, new { })</li>
                    <li class="@SelectedTabClass("users")">@Html.ActionLink("Users", "Index", "Users", new { area = "admin" }, new { })</li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Dropdown <span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li><a href="#">Action</a></li>
                            <li><a href="#">Another action</a></li>
                            <li><a href="#">Something else here</a></li>
                            <li role="separator" class="divider"></li>
                            <li><a href="#">Separated link</a></li>
                            <li role="separator" class="divider"></li>
                            <li><a href="#">One more separated link</a></li>
                        </ul>
                    </li>
                </ul>
                <form class="navbar-form navbar-left" role="search">
                    <div class="form-group">
                        <input type="text" class="form-control" placeholder="Search">
                    </div>
                    <button type="submit" class="btn btn-default">Submit</button>
                </form>
                <ul class="nav navbar-nav navbar-right">
                    <!-- check if user is authenticated -->
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li><a href="@Url.RouteUrl("logout")">Logout</a></li>
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@User.Identity.Name <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li><a href="#">View Profile</a></li>
                                <li><a href="#">Edit Profile</a></li>
                                <li><a href="#">Something else here</a></li>

                                <!-- if user is admin extra options -->
                                @if (User.IsInRole("admin"))
                                {
                                    <li role="separator" class="divider"></li>
                                    <!--
                                         url action goes to the action in the controller as we have 2 index posts routes we pass a third parameter
                                        for the area to specify we want to go to the admin posts
                                    -->
                                    <li><a href="@Url.Action("index", "Posts", new { area="admin"})">View posts in admin</a></li>
                                }

                            </ul>
                        </li>
                    }
                    else
                    {
                        <li><a href="@Url.RouteUrl("login")">Login</a></li>
                    }

                </ul>
            </div><!-- /.navbar-collapse -->
        </div><!-- /.container-fluid -->
    </nav>

    <div class="container body-content">
        <!-- render the view -->
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; 2016 - Krono</p>
        </footer>
    </div>

    <environment names="Development">
        <!-- Add scripts here -->
        @Scripts.Render("~/admin/scripts")
    </environment>
    <environment names="Staging,Production">

        <!-- Add scripts here -->
        @Scripts.Render("~/admin/scripts")
    </environment>


    <!-- Section for scripts from views -->
    @RenderSection("scripts", required: false)
</body>
</html>

